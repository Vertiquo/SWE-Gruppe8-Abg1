# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Monitor zu lesen"
type Query {
  monitore(titel: String): [Monitor!]

  monitor(id: ID!): Monitor
}

"Funktionen, um Monitore neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: MonitorInput!): String

  update(input: MonitorUpdateInput!): Int

  delete(id: ID!): Boolean
}

"Datenschema zu einem Monitor, der gelesen wird"
type Monitor {
  id: ID
  version: Int
  name: String
  hersteller: String
  preis: Float
  bestand: Int
  curved: Boolean
  refreshRate: RefreshRate
  release: String
  schlagwoerter: [String]
}

"Daten für einen neuen Monitor"
input MonitorInput {
  name: String
  hersteller: String
  preis: Float
  bestand: Int
  curved: Boolean
  refreshRate: RefreshRate
  release: String
  schlagwoerter: [String]
}

"Daten für einen zu ändernden Monitor"
input MonitorUpdateInput {
  id: ID
  version: Int
  name: String
  hersteller: String
  preis: Float
  bestand: Int
  curved: Boolean
  refreshRate: RefreshRate
  release: String
  schlagwoerter: [String]
}

"Enum-Typ für die Bildwiederholungsfrequenz."
enum RefreshRate {
  Hz60
  Hz120
  Hz144
  Hz240
}